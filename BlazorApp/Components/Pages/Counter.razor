@page "/counter/{initialCount:int?}"
@using BlazorApp.Components.Components
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<input type="type" name="name" value="" @onchange="onChange" @oninput="onInput" />
<button class="btn btn-primary" @onclick="IncrementCountAsync">Click me</button>
<button class="btn btn-primary" @onclick="() => currentCount+=2">Click me Inline</button>

@if(currentCount > 2)
{
    <p>Hey it's too high!Slow Down!</p>
}

<p>Hello @name</p>

<MyButton OnClick="IncrementCountAsync" class="btn btn-danger" data-test="dtest">
	<p>My Button</p>	
</MyButton>

<div class="p-2" @onmouseover="onMouseOver" @onmouseout="onMouseOut">
	<p class="bg-info">
		@eventText
	</p>
</div>

InitialCount is: @InitialCount

@code {
	private int currentCount = 0;
	private string name = "";
	private string eventText = "Mouse Out";

	protected override void OnInitialized()
	{
		base.OnInitialized();
		currentCount = InitialCount;
	}

	[Parameter]
	public int IncrementBy { get; set; } = 1;

	[Parameter]
	public int InitialCount { get; set; }

	private void IncrementCount()
	{
		currentCount+= IncrementBy;
	}

	private async Task IncrementCountAsync()
	{
		await Task.Delay(100);
		currentCount++;
	}
	private void onChange(ChangeEventArgs e)
	{
		name = e.Value.ToString();
	}
	private void onInput(ChangeEventArgs e)
	{
		name = e.Value.ToString();
	}
	private void onMouseOver(MouseEventArgs e)
	{
		eventText = "Mouse Over";
	}
	private void onMouseOut(MouseEventArgs e)
	{
		eventText = "Mouse out";
	}
}
